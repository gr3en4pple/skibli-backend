import { Router } from 'express'
import Controllers from '@/controllers'
import { authMiddleware, requireRole } from '@/middleware'

const router = Router()
const controller = new Controllers()

// clear cookie - logout
router.post('/logout', controller.logout)
// login phone
router.post('/send-sms-otp', controller.createNewAccessCode)
// login email
router.post('/login-email', controller.loginEmail)
// validate otp - phone,email
router.post('/verify-otp', controller.validateAccessCode)
// validate email link generated by create employee
router.post('/verify-email-link', controller.validateEmailLink)
router.post(
  '/complete-verification-link',
  controller.completeCreateEmployeeByEmailLink
)
// get user data by cookie
router.get('/me', authMiddleware, controller.getMe)

//** OWNER ONLY */

router.get(
  '/employees',
  authMiddleware,
  requireRole('owner'),
  controller.getEmployees
)

router.get(
  '/employee',
  authMiddleware,
  requireRole('owner'),
  controller.getEmployee
)
router.post(
  '/employee',
  authMiddleware,
  requireRole('owner'),
  controller.createEmployee
)

router.delete(
  '/employee/:id',
  authMiddleware,
  requireRole('owner'),
  controller.deleteEmployee
)

router.put(
  '/employee/:id',
  authMiddleware,
  requireRole('owner'),
  controller.editEmployee
)

//** TASK ROUTES */

//** OWNER ONLY */

router.post(
  '/tasks',
  authMiddleware,
  requireRole('owner'),
  controller.createTask
)

//** OWNER ONLY */

// get all tasks
router.get('/tasks', authMiddleware, controller.getAllTasks)

// task by id
router.get('/tasks/:id', authMiddleware, controller.getTask)

// change task status
router.put('/tasks/:id/status', authMiddleware, controller.updateTaskStatus)

export default router
